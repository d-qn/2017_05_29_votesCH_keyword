hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = "white",
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent',
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>% hc_add_series(dddd %>% filter(type == 'initiative'), "scatter", hcaes(x = as.numeric(tbin)-1, y = y), marker = list(symbol = "diamond", radius = 4, lineWidth = 1.5), color = "#efe9e0")
dddd <- ddd %>% filter(keyword == "Environmental policy")
dddd$tp <- paste0(
'<table cellpadding="1" style="line-height:1.1">',
'<tr><td>', dddd$date, '</td>',
'<td></td><td>', dddd$type, '</td></tr>',
'<tr><td colspan="3"><i>', dddd$`Title in English`, '</i><hr></td></tr>',
'<tr><td align="left">', "% yes",
#trad["tp.yes",lang],
': <b>', round(dddd$yes_pc, 1), '%</b>', '</td><td></td>',
'<td style="text-align:right">', "turnout",
#trad["tp.turnout",lang],
": ",
ifelse(round(dddd$Turnout, 1) == 0, " ", paste0(round(dddd$Turnout, 1), "%")), '</td></tr>',
'<tr><td colspan="3" align="center"><div style="color:#999999">',
ifelse(data$result == "no", "no", "yes"),
#trad["tp.refused",lang], trad["tp.accepted",lang]),
'</td></tr>',
'</table></div>')
stops <- data.frame(q = c(0, 0.4999, 0.5, 1),
c = c("#72302f", '#f8eded', '#dae9f1', "#193442"))
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = "white",
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent',
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>% hc_add_series(dddd %>% filter(type == 'initiative'), "scatter", hcaes(x = as.numeric(tbin)-1, y = y), marker = list(symbol = "diamond", radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3))
dddd <- ddd %>% filter(keyword == "Environmental policy")
# dddd$tp <- paste0(
# 				'<table cellpadding="1" style="line-height:1.1">',
# 			        '<tr><td>', dddd$date, '</td>',
# 						'<td></td><td>', dddd$type, '</td></tr>',
# 			       '<tr><td colspan="3"><i>', dddd$`Title in English`, '</i><hr></td></tr>',
# 			       '<tr><td align="left">', "% yes",
# 				#trad["tp.yes",lang],
# 				': <b>', round(dddd$yes_pc, 1), '%</b>', '</td><td></td>',
# 				   		'<td style="text-align:right">', "turnout",
# 				#trad["tp.turnout",lang],
# 				": ",
# 						ifelse(round(dddd$Turnout, 1) == 0, " ", paste0(round(dddd$Turnout, 1), "%")), '</td></tr>',
# 					'<tr><td colspan="3" align="center"><div style="color:#999999">',
# 						ifelse(dddd$Result == "no", "no", "yes"),
# 						       #trad["tp.refused",lang], trad["tp.accepted",lang]),
# 						       '</td></tr>',
# 				'</table></div>')
dddd$tp <- paste0(
'<table cellpadding="1" style="line-height:1.1">',
'<tr><td>', dddd$date, '</td>',
'<td></td><td>', dddd$type, '</td></tr>',
'<tr><td colspan="3"><i>', dddd$`Title in English`, '</i><hr></td></tr>',
'<tr><td>', "% yes",
#trad["tp.yes",lang],
': <b>', round(dddd$yes_pc, 1), '%</b>', '</td><td></td>',
'<td>', "turnout",
#trad["tp.turnout",lang],
": ",
ifelse(round(dddd$Turnout, 1) == 0, " ", paste0(round(dddd$Turnout, 1), "%")), '</td></tr>',
'<tr><td colspan="3" align="center"><div style="color:#999999">',
ifelse(dddd$Result == "no", "no", "yes"),
#trad["tp.refused",lang], trad["tp.accepted",lang]),
'</td></tr>',
'</table></div>')
stops <- data.frame(q = c(0, 0.4999, 0.5, 1),
c = c("#72302f", '#f8eded', '#dae9f1', "#193442"))
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = "white",
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent',
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>% hc_add_series(dddd %>% filter(type == 'initiative'), "scatter", hcaes(x = as.numeric(tbin)-1, y = y), marker = list(symbol = "diamond", radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3))
count
max(count$nmax)
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = "white",
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent', max = max(count$nmax),
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>% hc_add_series(dddd %>% filter(type == 'initiative'), "scatter", hcaes(x = as.numeric(tbin)-1, y = y), marker = list(symbol = "diamond", radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3))Â¨
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = "white",
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent', max = max(count$nmax),
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>% hc_add_series(dddd %>% filter(type == 'initiative'), "scatter", hcaes(x = as.numeric(tbin)-1, y = y), marker = list(symbol = "diamond", radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3))
hc3
hc_chart()
?hc_chart()
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>% hc_chart()
hc3
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3))
hc3
methods(hchart)
bg.colour <-  "#f7f5ed"
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = bg.colour,
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent', max = max(count$nmax),
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>% hc_add_series(dddd %>% filter(type == 'initiative'), "scatter", hcaes(x = as.numeric(tbin)-1, y = y), marker = list(symbol = "diamond", radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour)
hc3
bg.colour <-  "white"
stops <- data.frame(q = c(0, 0.4999, 0.5, 1),
c = c("#72302f", '#f8eded', '#dae9f1', "#193442"))
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = bg.colour,
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent', max = max(count$nmax),
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>% hc_add_series(dddd %>% filter(type == 'initiative'), "scatter", hcaes(x = as.numeric(tbin)-1, y = y), marker = list(symbol = "diamond", radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour)
hc3
hc_annotations()
?hc_annotations()
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(xValue = 1, yValue = max(count$nmax) -1, title = list(text = "Environmental policy"))
hc3
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(xValue = 1, yValue = max(count$nmax) -1, title = list(text = "Environmental policy"))
hc3
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = max(count$nmax) -1, title = list(text = "Environmental policy")))
hc3
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = max(count$nmax) -1, title = "Environmental policy"))
hc3
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = max(count$nmax) -1, text = "Environmental policy"))
hc3
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = max(count$nmax) -1, title = list(text = "asda"))
)
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = max(count$nmax) -1, title = list(text = "asda")))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = max(count$nmax) -1, title = list(text = "")))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = max(count$nmax) -1))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = max(count$nmax) -10))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = max(count$nmax) -10))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1)
)
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = 5, title = list(text = "")))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = 0.5, title = list(text = "")))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = 0, title = list(text = "")))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(list(xValue = 1, yValue = 7, title = list(text = "")))
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london)
hc
hc %>% hc_add_annotation(list(xValue = "Feb", yValue = 15, title = list(text = "asda")))
hc %>% hc_add_annotation(xValue = "Feb", yValue = 15, title = list(text = "asda"))
hc %>% hc_add_annotation(xValue = 3, yValue = 15, title = list(text = "asda"))
hc %>% hc_add_annotation(xValue = 1, yValue = 2, title = list(text = "asda"))
hc %>% hc_add_annotation(xValue = 3, yValue = 15, title = list(text = "asda"))
hc %>% hc_add_annotation(xValue = 3, yValue = 25, title = list(text = "asda"))
hc %>% hc_add_annotation(xValue = 1, yValue = 25, title = list(text = "asda"))
hc %>% hc_add_annotation(xValue = 0, yValue = 25, title = list(text = "asda"))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(xValue = 1, yValue = max(count$nmax) -1, title = list(text = "asda")))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(xValue = 1, yValue = max(count$nmax) -1, title = list(text = "asda"))
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour) %>%
hc_add_annotation(xValue = 3, yValue = 3, title = list(text = "asda"))
hc %>% hc_add_annotation(xValue = 0, yValue = 25, title = list(text = "asda"))
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour)
hc3 %>% hc_add_annotation(xValue = 3, yValue = 3, title = list(text = "asda"))
hc3
hc3 %>% hc_add_annotation(xValue = 3, yValue = 3, title = list(text = "asda"))
hc %>% hc_add_annotation(xValue = 0, yValue = 25, title = list(text = "asda"))
levels(dddd$tbin)
levels(dddd$tbin)[1]
hc3 %>% hc_add_annotation(xValue = levels(dddd$tbin)[1], yValue = 3, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = levels(dddd$tbin)[1], yValue = 10, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = levels(dddd$tbin)[2], yValue = 5, title = list(text = "asda"))
?hc_add_annotations()
hc3 %>% hc_add_annotations(xValue = levels(dddd$tbin)[2], yValue = 5, title = list(text = "asda"))
?hc_add_annotations()  hc3 %>% hc_add_annotation(xValue = levels(dddd$tbin)[2], yValue = 5, title = list(text = "asda"))
hc_add_annotations()  hc3 %>% hc_add_annotation(xValue = levels(dddd$tbin)[2], yValue = 5, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = levels(dddd$tbin)[2], yValue = 5, title = list(text = "asda"))
?hc_annotations()
hc3 %>% hc_annotations(xValue = levels(dddd$tbin)[2], yValue = 5, title = list(text = "asda"))
hc3 %>% hc_annotations(list(xValue = levels(dddd$tbin)[2], yValue = 5, title = list(text = "asda")))
?hc_annotations()
hc %>% hc_add_annotation(xValue = 0, yValue = 25, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = levels(dddd$tbin)[2], yValue = 5, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = levels(dddd$tbin)[2], yValue = 5, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 5], yValue = 5, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 5, yValue = 5, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 3, yValue = 13, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 5, yValue = 10, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 2, yValue = 12, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 3, yValue = 10, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 5, yValue = 10, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 4, yValue = 10, title = list(text = "asda"))
nlevels(dddd$tbin)
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = bg.colour,
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent', max = max(count$nmax),
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0,
min = 0, max = nlevels(dddd$tbin), reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>% hc_add_series(dddd %>% filter(type == 'initiative'), "scatter", hcaes(x = as.numeric(tbin)-1, y = y), marker = list(symbol = "diamond", radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour)
hc3
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = bg.colour,
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent', max = max(count$nmax),
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0,
min = 0, max = nlevels(dddd$tbin)-1, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>% hc_add_series(dddd %>% filter(type == 'initiative'), "scatter", hcaes(x = as.numeric(tbin)-1, y = y), marker = list(symbol = "diamond", radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc3 <- hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour)
hc3 %>% hc_add_annotation(xValue = 1, yValue = 13, title = list(text = "asda"))
hc3
hc3 %>% hc_add_annotation(xValue = 1, yValue = 13, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 0, yValue = 13, title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 0, yValue = 13, anchorX =  "left" ,title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 0, yValue = 13, anchorX =  "right" ,title = list(text = "asda"))
hc3 %>% hc_add_annotation(xValue = 0, yValue = 13, anchorX =  "right" ,title = list(text = "Environmental policy"))
hc3 %>% hc_add_annotation(xValue = 0, yValue = 13, anchorX =  "left" ,title = list(text = "Environmental policy"))
hc3 %>% hc_add_annotation(xValue = -0.5, yValue = 13, anchorX =  "left" ,title = list(text = "Environmental policy"))
hc3 %>% hc_add_annotation(xValue = -0.5, yValue = 13.5, anchorX =  "left" ,title = list(text = "Environmental policy"))
hc3 %>% hc_add_annotation(
xValue = -0.5, yValue = 13.5,
anchorX =  "left" , title = list(text = "Environmental policy",
style = list("color" =  "#333333", "fontSize" = "18px"))
)
hc3 %>% hc_add_annotation(
xValue = -0.5, yValue = 13.5,
anchorX =  "left" , title = list(text = "Environmental policy",
style = list("color" =  "#333333", "fontSize" = "27px"))
install.packages("colourpicker")
hc3 %>% hc_add_annotation(
xValue = -0.5, yValue = 13.5,
anchorX =  "left" , title = list(text = "Environmental policy",
style = list("color" =  "#333333", "fontSize" = "2em"))
)
shinyjs:::colourPickerAddin()
hc3 %>% hc_add_annotation(
xValue = -0.5, yValue = 13.5,
anchorX =  "left" , title = list(text = "Environmental policy",
style = list("color" =  "#e3cda1", "fontSize" = "2em"))
)
hc3 %>% hc_add_annotation(
xValue = -0.5, yValue = 13.5,
anchorX =  "left" , title = list(text = "Environmental policy",
style = list("color" =  "#e3cda1", "fontSize" = "3em"))
)
hc3 %>% hc_add_annotation(
xValue = -0.5, yValue = 13,
anchorX =  "left" , title = list(text = "Environmental policy",
style = list("color" =  "#beb298", "fontSize" = "3em"))
)
keywords
head(keywords)
head(keywords, 20)
head(keywords, 30)
head(keywords, 30) %>% names()
bg.colour <-  "white"
stops <- data.frame(q = c(0, 0.4999, 0.5, 1),
c = c("#72302f", '#f8eded', '#dae9f1', "#193442"))
singlePlot <- function(ddd, kw) {
dddd <- ddd %>% filter(keyword == kw)
dddd$tp <- paste0(
'<table cellpadding="1" style="line-height:1.1">',
'<tr><td>', dddd$date, '</td>',
'<td></td><td>', dddd$type, '</td></tr>',
'<tr><td colspan="3"><i>', dddd$`Title in English`, '</i><hr></td></tr>',
'<tr><td>', "% yes",
#trad["tp.yes",lang],
': <b>', round(dddd$yes_pc, 1), '%</b>', '</td><td></td>',
'<td>', "turnout",
#trad["tp.turnout",lang],
": ",
ifelse(round(dddd$Turnout, 1) == 0, " ", paste0(round(dddd$Turnout, 1), "%")), '</td></tr>',
'<tr><td colspan="3" align="center"><div style="color:#999999">',
ifelse(dddd$Result == "no", "no", "yes"),
#trad["tp.refused",lang], trad["tp.accepted",lang]),
'</td></tr>','</table><')
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = bg.colour,
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent', max = max(count$nmax),
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0,
min = 0, max = nlevels(dddd$tbin)-1, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>%
hc_add_series(dddd %>% filter(type == 'initiative'), "scatter",
hcaes(x = as.numeric(tbin)-1, y = y),
marker = list(symbol = "diamond",
radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc2
}
plots <- lapply(kw.sub, function(kw) singlePlot(ddd, kw))
plots[[1]]
plots[[2]]
singlePlot <- function(ddd, kw) {
dddd <- ddd %>% filter(keyword == kw)
dddd$tp <- paste0(
'<table cellpadding="1" style="line-height:1.1">',
'<tr><td>', dddd$date, '</td>',
'<td></td><td>', dddd$type, '</td></tr>',
'<tr><td colspan="3"><i>', dddd$`Title in English`, '</i><hr></td></tr>',
'<tr><td>', "% yes",
#trad["tp.yes",lang],
': <b>', round(dddd$yes_pc, 1), '%</b>', '</td><td></td>',
'<td>', "turnout",
#trad["tp.turnout",lang],
": ",
ifelse(round(dddd$Turnout, 1) == 0, " ", paste0(round(dddd$Turnout, 1), "%")), '</td></tr>',
'<tr><td colspan="3" align="center"><div style="color:#999999">',
ifelse(dddd$Result == "no", "no", "yes"),
#trad["tp.refused",lang], trad["tp.accepted",lang]),
'</td></tr>','</table><')
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = bg.colour,
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent', max = max(count$nmax),
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0,
min = 0, max = nlevels(dddd$tbin)-1, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>%
hc_add_series(dddd %>% filter(type == 'initiative'), "scatter",
hcaes(x = as.numeric(tbin)-1, y = y),
marker = list(symbol = "diamond",
radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour)
}
plots <- lapply(kw.sub, function(kw) singlePlot(ddd, kw))
plots
plots[[1]]
201.898-173.518
136.320-110.635
5833 * (2.4/100)
7143 * (2.1/100)
library(highcharter)
lang <- 'EN'
#head(keywords, 30) %>% names()
kw.sub
bg.colour <-  "white"
stops <- data.frame(q = c(0, 0.4999, 0.5, 1),
c = c("#72302f", '#f8eded', '#dae9f1', "#193442"))
singlePlot <- function(ddd, kw) {
dddd <- ddd %>% filter(keyword == kw)
dddd$tp <- paste0(
'<table cellpadding="1" style="line-height:1.1">',
'<tr><td>', dddd$date, '</td>',
'<td></td><td>', dddd$type, '</td></tr>',
'<tr><td colspan="3"><i>', dddd$`Title in English`, '</i><hr></td></tr>',
'<tr><td>', "% yes",
#trad["tp.yes",lang],
': <b>', round(dddd$yes_pc, 1), '%</b>', '</td><td></td>',
'<td>', "turnout",
#trad["tp.turnout",lang],
": ",
ifelse(round(dddd$Turnout, 1) == 0, " ", paste0(round(dddd$Turnout, 1), "%")), '</td></tr>',
'<tr><td colspan="3" align="center"><div style="color:#999999">',
ifelse(dddd$Result == "no", "no", "yes"),
#trad["tp.refused",lang], trad["tp.accepted",lang]),
'</td></tr>','</table>')
hc <- hchart(dddd, "heatmap",
hcaes(x = tbin, y = y, value = yes_pc, tp = tp)) %>%
hc_colorAxis(min = 0, max  = 100, stops = list_parse2(stops)) %>%
hc_plotOptions(heatmap = list(borderWidth = 3, borderColor = bg.colour,
borderRadius = 4)) %>%
hc_legend(enabled = F) %>%
hc_yAxis(gridLineWidth = 0, lineColor = 'transparent', max = max(count$nmax),
labels = list (enabled = F), title = "", opposite = ifelse(lang == "AR", T, F)) %>%
hc_xAxis(gridLineWidth = 0, lineColor = 'transparent', title = "", tickLength = 0,
min = 0, max = nlevels(dddd$tbin)-1, reversed = ifelse(lang == "AR", T, F)) %>%
hc_add_theme(hc_theme_swi)
hc2 <- hc %>%
hc_add_series(dddd %>% filter(type == 'initiative'), "scatter",
hcaes(x = as.numeric(tbin)-1, y = y),
marker = list(symbol = "diamond",
radius = 4, lineWidth = 1.5), color = "#efe9e0")
hc2 %>% hc_tooltip(formatter = JS("function() { return this.point.tp; }"), useHTML = T,
borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3)) %>%
hc_chart(backgroundColor = bg.colour)
}
plots <- lapply(kw.sub, function(kw) singlePlot(ddd, kw))
plots[[1]]
plots[[2]]
